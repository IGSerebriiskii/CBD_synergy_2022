type='mesh3d', intensity = ~signal2,
colors=  colorRamp(gray.colors(5))
)
pl2 = pl %>% layout(scene = list(zaxis=list(
range = c(0,450000))))
pl2
fadu_data3 %>% filter(kind_code >2)
fadu_data5 = fadu_data3 %>% filter(kind_code >2) %>% slice(1:10)
fadu_data5
add_markers(pl2, x = fadu_data5$row, y = fadu_data5$col, z = fadu_data5$signal)
fadu_drug_map = read_excel("plate_map_1_drugs.xlsx",
na = "NA")
fadu_drug_map
fadu_data3
fadu_data3 %>% left_join(fadu_drug_map)
fadu_data3 %>% left_join(fadu_drug_map)   %>%  mutate(drugs = case_when(fadu_data3$groups == "DMSO + dmso" ~ "bckg",
fadu_data3$groups == "STAUR + dmso" ~ "staur",
fadu_data3$groups == "dmso wellmate only/unpinned" ~ "dmso",
fadu_data3$groups == "library 0.2µM + dmso wellmate" ~ "lib",
fadu_data3$groups == "library + dmso" ~ "lib"))
# it works
fadu_data3 %>% left_join(fadu_drug_map)   %>%  mutate(drugs = case_when(groups == "DMSO + dmso" ~ "bckg",
fadu_data3$groups == "STAUR + dmso" ~ "staur",
fadu_data3$groups == "dmso wellmate only/unpinned" ~ "dmso",
fadu_data3$groups == "library 0.2µM + dmso wellmate" ~ "lib",
fadu_data3$groups == "library + dmso" ~ "lib"))
# it works
fadu_data3 %>% left_join(fadu_drug_map)   %>%  mutate(drugs = case_when(drugs == "DMSO + dmso" ~ "bckg",
drugs == "STAUR + dmso" ~ "staur",
drugs == "dmso wellmate only/unpinned" ~ "dmso",
TRUE ~ drugs))
# it works
fadu_data3_ann = fadu_data3 %>% left_join(fadu_drug_map)   %>%  mutate(drugs = case_when(drugs == "DMSO + dmso" ~ "bckg",
drugs == "STAUR + dmso" ~ "staur",
drugs == "dmso wellmate only/unpinned" ~ "dmso",
TRUE ~ drugs))
fadu_data3_ann
fadu_data3_ann %>% group_by(drugs)
fadu_data3_ann %>% group_by(drugs) %>%
summarise(Avg = mean(Signal, na.rm=T), SD = sd(Signal, na.rm=T))
fadu_data3_ann %>% group_by(drugs) %>%
summarise(Avg = mean(signal, na.rm=T), SD = sd(signal, na.rm=T))
seq(1, 16, 4)
fadu_data3_ann %>% select(row,col, well,drugs)
fadu_data3_ann %>% select(row,col, well,drugs) %>% arrange(drugs)
fadu_data3_ann %>% select(row,col, well,drugs) %>% arrange(drugs, row, col)
fadu_data3_ann %>% select(row,col, well,drugs) %>% arrange(drugs, row, col) %>% mutate(col1 = col + 1)
fadu_data3_ann %>% select(row,col, well,drugs) %>% arrange(drugs, row, col) %>% mutate(col = col + 1)
fadu_data3_ann_subset = fadu_data3_ann %>% select(row,col, well,drugs) %>% arrange(drugs, row, col) %>% mutate(col = col + 1)
fadu_data3_ann_subset
fadu_data3_ann_subset %>% slice(1:15)
fadu_data3_ann_subset %>% slice(1:15) %>% filter(row_number() %% 3 == 1)
fadu_data3_ann_subset %>% slice(1:15) %>% filter(which(row_number() %% 3 == 1))
3 %% 3
4 %% 3
fadu_data3_ann_subset %>% slice(1:15) %>% filter(which(row_number() %% 3 == 0))
fadu_data3_ann_subset %>% slice(1:15) %>% filter((row_number() %% 3 == 0)
fadu_data3_ann_subset %>% slice(1:15) %>% filter(which(row_number() %% 3 == 1)))
fadu_data3_ann_subset %>% slice(1:15) %>% filter(row_number() %% 3 == 0)
fadu_data3_ann_subset %>% slice(1:15)
fadu_data3_ann_subset %>% slice(1:15) %>% filter(row_number() %% 3 == 0) %>% select(-well)
fadu_data3_ann_subset %>% slice(1:15) %>% filter(row_number() %% 3 == 0) %>% select(-well) %>% left_join(fadu_data3)
plate_controls
fadu_data = read_excel("plate_map_1_1.xlsx",
na = "NA")
fadu_drug_map = read_excel("plate_map_1_drugs.xlsx",
na = "NA")
fadu_data = bind_cols(rep(1:16,each=24),rep(1:24,16),fadu_data)
fadu_data = read_excel("plate_map_1_1.xlsx",
na = "NA")
fadu_data_ann = bind_cols(rep(1:16,each=24),rep(1:24,16),fadu_data)
colnames(fadu_data) = c("row","col",colnames(fadu_data2))
fadu_data_ann
colnames(fadu_data_ann) = c("row","col",colnames(fadu_data2))
fadu_data_ann
fadu_data_ann = fadu_data_ann %>%  left_join(fadu_drug_map)   %>%  mutate(drugs = case_when(drugs == "DMSO + dmso" ~ "bckg",
drugs == "STAUR + dmso" ~ "staur",
drugs == "dmso wellmate only/unpinned" ~ "dmso",
TRUE ~ drugs))
fadu_data_ann
fadu_data_ann = fadu_data_ann  %>%  mutate(groups = case_when(groups == "DMSO + dmso" ~ "bckg",
groups == "STAUR + dmso" ~ "staur",
groups == "dmso wellmate only/unpinned" ~ "dmso",
TRUE ~ "lib"))
fadu_data_ann
fadu_data_ann = bind_cols(rep(1:16,each=24),rep(1:24,16),fadu_data)
colnames(fadu_data_ann) = c("row","col",colnames(fadu_data2))
fadu_data_ann = fadu_data_ann %>%  left_join(fadu_drug_map)   %>%  mutate(drugs = case_when(drugs == "DMSO + dmso" ~ "bckg",
drugs == "STAUR + dmso" ~ "staur",
drugs == "dmso wellmate only/unpinned" ~ "dmso",
TRUE ~ drugs))
fadu_data_ann = fadu_data_ann  %>%
mutate(group_code = case_when(groups == "DMSO + dmso" ~ 0,
groups == "STAUR + dmso" ~ 10,
groups == "dmso wellmate only/unpinned" ~ 1,
TRUE ~ 2)) %>%
mutate(groups = case_when(groups == "DMSO + dmso" ~ "bckg",
groups == "STAUR + dmso" ~ "staur",
groups == "dmso wellmate only/unpinned" ~ "dmso",
TRUE ~ "lib"))
fadu_data_ann
matrix(fadu_data_ann$group_code,16,24, byrow = T)
matrix(fadu_data_ann$group_code,16,24, byrow = T) %>% pheatmap(cluster_rows = F,cluster_cols = F)
# plotting heatmap and figuring out the annotation quirks
#####
matrix(fadu_data$signal,16,24, byrow = T) %>% pheatmap(fadu_data_m,cluster_rows = F,cluster_cols = F)
fadu_data
# image saved as "384well plate map.png"
matrix(fadu_data_ann$signal,16,24, byrow = T) %>% pheatmap(cluster_rows = F,cluster_cols = F)
fadu_data_ann_calc
fadu_data_ann_calc = fadu_data_ann %>% group_by(drugs) %>%
summarise(Avg = mean(signal, na.rm=T), SD = sd(signal, na.rm=T))
fadu_data_ann_calc
fadu_data_ann_summary  = fadu_data_ann %>% group_by(group) %>%
summarise(Avg = mean(signal, na.rm=T), SD = sd(signal, na.rm=T))
fadu_data_ann
fadu_data_ann_summary  = fadu_data_ann %>% group_by(groups) %>%
summarise(Avg = mean(signal, na.rm=T), SD = sd(signal, na.rm=T))
fadu_data_ann_summary %>% ggplot(aes(x = as.factor(groups),y = signal)) +
geom_violin(trim = F)+
geom_boxplot(width=0.1, color="red") +
theme(axis.text.x = element_text(angle = 90))
fadu_data_ann_summary  = fadu_data_ann %>% group_by(groups) %>%
summarise(Avg = mean(signal, na.rm=T), SD = sd(signal, na.rm=T))
fadu_data_ann_summary %>% ggplot(aes(x = as.factor(groups),y = signal)) +
geom_violin(trim = F)+
geom_boxplot(width=0.1, color="red") +
theme(axis.text.x = element_text(angle = 90))
fadu_data_ann_summary
fadu_data_ann %>% ggplot(aes(x = as.factor(groups),y = signal)) +
geom_violin(trim = F)+
geom_boxplot(width=0.1, color="red") +
theme(axis.text.x = element_text(angle = 90))
fadu_data_ann_calc
# matching DMSO wells to drugs
#  create pattern for DMSO wells
fadu_data_ann_dmso_matching = fadu_data_ann %>% select(row,col, well,drugs) %>% arrange(drugs, row, col) %>% mutate(col = col + 1)
fadu_data_ann_dmso_matching
fadu_data_ann
# matching DMSO wells to drugs
#  create pattern for DMSO wells
fadu_data_ann_dmso_matching = fadu_data_ann %>% select(row,col, well,drugs) %>% arrange(drugs, row, col) %>%
mutate(col = col + 1) %>% select(-well) %>%
left_join(fadu_data_ann)
fadu_data_ann_dmso_matching
# matching DMSO wells to drugs
#  create pattern for DMSO wells
fadu_data_ann_dmso_matching = fadu_data_ann %>% select(row,col, well,drugs) %>% arrange(drugs, row, col) %>%
mutate(col = col + 1) %>% filter(row_number() %% 3 == 0) %>% select(-well) %>%
left_join(fadu_data_ann)
fadu_data_ann_dmso_matching
adu_data_ann_dmso_matching = fadu_data_ann %>% select(row,col, well,drugs) %>% arrange(drugs, row, col) %>%
mutate(col = col + 1) %>% filter(row_number() %% 3 == 0) %>% select(-well)
rm(adu_data_ann_dmso_matching)
fadu_data_ann %>% select(row,col, well,drugs) %>% arrange(drugs, row, col) %>%
mutate(col = col + 1) %>% filter(row_number() %% 3 == 0) %>% select(-well)
fadu_data_ann
fadu_data_ann %>% select(row,col, well,drugs)
fadu_data_ann %>% select(row,col, well,drugs) %>% arrange(drugs, row, col)
fadu_data_ann %>% select(row,col, well,drugs) %>% arrange(drugs, row, col) %>%
mutate(col = col + 1)
fadu_data_ann %>% select(row,col, well,drugs) %>% arrange(drugs, row, col) %>%
as.integer(mutate(col = col + 1))
fadu_data_ann %>% select(row,col, well,drugs) %>% arrange(drugs, row, col) %>%
mutate(as.integer(col = col + 1))
fadu_data_ann %>% select(row,col, well,drugs) %>% arrange(drugs, row, col) %>%
mutate(col = col + 1) %>%  mutate(col =  as.integer(col)))
fadu_data_ann %>% select(row,col, well,drugs) %>% arrange(drugs, row, col) %>%
mutate(col = col + 1) %>%  mutate(col =  as.integer(col))
fadu_data_ann %>% select(row,col, well,drugs) %>% arrange(drugs, row, col) %>%
mutate(col = col + 1) %>%  mutate(col =  as.integer(col)) %>% filter(row_number() %% 3 == 0) %>% select(-well) %>%
left_join(fadu_data_ann)
fadu_data_ann %>% select(row,col, well,drugs) %>% arrange(drugs, row, col) %>%
mutate(col = col + 1) %>%  filter(row_number() %% 3 == 0) %>% select(-well) %>%
left_join(fadu_data_ann %>% select(-drugs))
fadu_data_ann_dmso_matching %>%  left_join(fadu_data_ann_calc)
fadu_data_ann_dmso_matching = fadu_data_ann %>% select(row,col, well,drugs) %>% arrange(drugs, row, col) %>%
mutate(col = col + 1) %>%  filter(row_number() %% 3 == 0) %>% select(-well) %>%
left_join(fadu_data_ann %>% select(-drugs))
fadu_data_ann_dmso_matching = fadu_data_ann_dmso_matching %>%  left_join(fadu_data_ann_calc)
fadu_data_ann_dmso_matching
fadu_data_ann_dmso_wells_matching = fadu_data_ann %>% select(row,col, well,drugs) %>% arrange(drugs, row, col) %>%
mutate(col = col + 1) %>%  filter(row_number() %% 3 == 0) %>% select(-well)
fadu_data_ann_dmso_wells_matching
fadu_data_ann
fadu_data_ann %>% select(-drugs) %>%
filter(group_code < 2)
fadu_data_ann_dmso_matching = fadu_data_ann %>% select(-drugs) %>%
filter(group_code < 2) %>% left_join(fadu_data_ann_dmso_wells_matching)
fadu_data_ann_dmso_matching
View(fadu_data_ann_dmso_matching)
fadu_data_ann_dmso_matching %>%  left_join(fadu_data_ann_calc)
fadu_data_ann_dmso_matching = fadu_data_ann_dmso_matching %>%  left_join(fadu_data_ann_calc)
pl <- plot_ly(
fadu_data_ann_dmso_matching, x= ~row, y= ~col, z= ~signal2,
type='mesh3d', intensity = ~signal,
colors=  colorRamp(gray.colors(5))
)
pl2 = pl %>% layout(scene = list(zaxis=list(
range = c(0,450000))))
pl <- plot_ly(
fadu_data_ann_dmso_matching, x= ~row, y= ~col, z= ~signal,
type='mesh3d', intensity = ~signal,
colors=  colorRamp(gray.colors(5))
)
pl2 = pl %>% layout(scene = list(zaxis=list(
range = c(0,450000))))
fadu_data_ann_dmso_matching
fadu_data4
pl <- plot_ly(
fadu_data4, x= ~row, y= ~col, z= ~signal2,
type='mesh3d', intensity = ~signal2,
colors=  colorRamp(gray.colors(5))
)
pl2 = pl %>% layout(scene = list(zaxis=list(
range = c(0,450000))))
pl2
pl <- plot_ly(
fadu_data_ann_dmso_matching, x= ~row, y= ~col, z= ~signal,
type='mesh3d', intensity = ~signal,
colors=  colorRamp(gray.colors(5))
)
pl2 = pl %>% layout(scene = list(zaxis=list(
range = c(0,450000))))
pl2
fadu_data_ann_dmso_matching %>% filter(!is.na(Avg)) %>% filter(drugs !="dmso")
fadu_data_ann_dmso_matching %>% filter(!is.na(Avg)) %>% filter(drugs !="dmso"|drugs !="bckg")
fadu_data_ann_dmso_matching %>% filter(!is.na(Avg))
fadu_data_ann_dmso_matching
View(fadu_data_ann_dmso_matching)
View(fadu_data_ann_calc)
fadu_data_ann_dmso_matching = fadu_data_ann %>% select(-drugs) %>%
filter(group_code < 2) %>% left_join(fadu_data_ann_dmso_wells_matching)
fadu_data_ann_dmso_matching
View(fadu_data_ann_dmso_matching)
View(fadu_data_ann_dmso_matching)
View(fadu_data_ann_dmso_wells_matching)
fadu_data_ann %>% select(row,col, well,drugs) %>% arrange(drugs, row, col)
fadu_data_ann %>% select(row,col, well,drugs) %>% arrange(drugs, row, col) %>%
mutate(col = col + 1)
fadu_data_ann_dmso_wells_matching = fadu_data_ann %>%
filter(groups == "lib") %>% select(row,col, well,drugs) %>% arrange(drugs, row, col) %>%
mutate(col = col + 1) %>%  filter(row_number() %% 3 == 0) %>% select(-well)
fadu_data_ann_dmso_matching = fadu_data_ann %>% select(-drugs) %>%
filter(group_code < 2) %>% left_join(fadu_data_ann_dmso_wells_matching)
fadu_data_ann_dmso_matching = fadu_data_ann_dmso_matching %>%  left_join(fadu_data_ann_calc)
fadu_data_ann_dmso_matching
View(fadu_data_ann_dmso_matching)
fadu_data_ann_dmso_matching %>% filter(!is.na(Avg)) %>% filter(drugs !="dmso"|drugs !="bckg")
fadu_data_drugs = fadu_data_ann_dmso_matching %>% filter(!is.na(Avg)) %>% filter(drugs !="dmso"|drugs !="bckg")
add_markers(pl2, x = fadu_data_drugs$row, y = fadu_data5$col, z = fadu_data_drugs$Avg)
fadu_data_drugs
add_markers(pl2, x = fadu_data_drugs$row, y = fadu_data_drugs$col, z = fadu_data_drugs$Avg)
View(fadu_data_ann)
fadu_data_all = read_excel("CBD screening  384 run 2_4 hours CTB.xlsx")
unperturbed = fadu_data_all %>% filter(Plate==5)
View(unperturbed)
unperturbed = bind_cols(rep(1:16,each=24),rep(1:24,16),fadu_data_all %>% filter(Plate==5) )
colnames(unperturbed) = c("row","col",colnames(fadu_data_all))
matrix(unperturbed$Signal,16,24, byrow = T) %>% pheatmap(fadu_data_m,cluster_rows = F,cluster_cols = F)
matrix(unperturbed$Signal,16,24, byrow = T) %>% pheatmap(cluster_rows = F,cluster_cols = F)
colnames(unperturbed) = c("row","col","plate","well","signal")
plu <- plot_ly(
unperturbed, x= ~row, y= ~col, z= ~signal,
type='mesh3d', intensity = ~signal,
colors=  colorRamp(gray.colors(5))
)
plu2 = pl %>% layout(scene = list(zaxis=list(
range = c(0,450000))))
plu2
plu2 = plu %>% layout(scene = list(zaxis=list(
range = c(0,450000))))
plu2
plu2 = plu %>% layout(scene = list(zaxis=list(
range = c(0,600000))))
plu2
unperturbed
unperturbed %>% select(well, all_of())
unperturbed %>% relocate(well, )
500/90.98
300 * 90.98
412/27500
fadu_data_all
colnames(fadu_data_all) = c("plate","well","signal")
fadu_data_ann
#####
fadu_data_all_ann = fadu_data_all %>% filter(Plate<5) %>% left_join(fadu_data_ann %>% select(-signal))
#####
fadu_data_all_ann = fadu_data_all %>% filter(plate<5) %>% left_join(fadu_data_ann %>% select(-signal))
fadu_data_all_ann
# image saved as "uperturbed view1.png", "uperturbed view2.png"
summary(unperturbed$signal)
fadu_data_all_ann_calc = fadu_data_all_ann %>% group_by(plate,drugs) %>%
summarise(Avg = mean(signal, na.rm=T), SD = sd(signal, na.rm=T))
fadu_data_all_ann_calc
View(fadu_data_all_ann_calc)
fadu_data_all_ann_summary  = fadu_data_all_ann %>% group_by(plate,groups) %>%
summarise(Avg = mean(signal, na.rm=T), SD = sd(signal, na.rm=T))
fadu_data_all_ann_summary
fadu_data_ann %>% mutate(annotation = paste(plate, groups)) %>%  ggplot(aes(x = as.factor(groups),y = signal)) +
geom_violin(trim = F)+
geom_boxplot(width=0.1, color="red") +
theme(axis.text.x = element_text(angle = 45))
fadu_data_ann %>% mutate(annotation = paste(plate, groups))
fadu_data_all_ann_summary %>% mutate(annotation = paste(plate, groups)) %>%  ggplot(aes(x = as.factor(groups),y = signal)) +
geom_violin(trim = F)+
geom_boxplot(width=0.1, color="red") +
theme(axis.text.x = element_text(angle = 45))
View(fadu_data_all_ann)
fadu_data_all_ann %>% mutate(annotation = paste(plate, groups)) %>%  ggplot(aes(x = as.factor(groups),y = signal)) +
geom_violin(trim = F)+
geom_boxplot(width=0.1, color="red") +
theme(axis.text.x = element_text(angle = 45))
fadu_data_all_ann %>% mutate(annotation = paste(plate, groups)) %>%  ggplot(aes(x = as.factor(annotation),y = signal)) +
geom_violin(trim = F)+
geom_boxplot(width=0.1, color="red") +
theme(axis.text.x = element_text(angle = 45))
ggsave("384plate run 2 CTB summary.png")
fadu_data_all_ann_summary %>% write_csv("384plate run 2 CTB summary.csv")
fadu_data_all_ann_calc %>% write_csv("384plate run 2 CTB calc")
View(fadu_data_all_ann_calc)
fadu_data_all_ann_calc %>%
pivot_wider(names_from = plate, values_from = c(Avg,SD))
fadu_data_all_ann_summary
fadu_data_all_ann
# see the original version of this script for sources of some lines and for the playground with the visuals
# this version gets all four plates
fadu_data = read_excel("plate_map_1_1.xlsx",
na = "NA")
setwd("~/Work/Flavi CBD screen/CBD_synergy_2022")
# see the original version of this script for sources of some lines and for the playground with the visuals
# this version gets all four plates
fadu_data = read_excel("plate_map_1_1.xlsx",
na = "NA")
setwd("~/Work/Flavi CBD screen/CBD_synergy_2022")
# see the original version of this script for sources of some lines and for the playground with the visuals
# this version gets all four plates
fadu_data = read_excel("plate_map_1_1.xlsx",
na = "NA")
# importing all data
#####
# reading all image-based data (note the Excel file was manually purged of all comments!!!)
fadu_data_all = read_excel("CBD screening_run 1_Nuclei count_SUM_raw data IS.xlsx")
fadu_data_all
fadu_data_all %>% slice(1,2,4)
fadu_data_all %>% select(1,2,4)
# importing all data
#####
# reading all image-based data (note the Excel file was manually purged of all comments!!!)
fadu_data_all = read_excel("CBD screening_run 1_Nuclei count_SUM_raw data IS.xlsx") %>% select(1,2,4)
fadu_data_all
colnames(fadu_data_all) = c("plate","well","signal")
fadu_data_all = fadu_data_all %>% mutate(plate = rep(1:6, each = 384))
fadu_data_all
tail(fadu_data_all)
# visuzlizing unperturbed plate
#####
unperturbed = bind_cols(rep(1:16,each=24),rep(1:24,16),fadu_data_all %>% filter(plate==6) )
colnames(unperturbed) = c("row","col","plate","well","signal")
matrix(unperturbed$signal,16,24, byrow = T) %>% pheatmap(cluster_rows = F,cluster_cols = F)
summary(unperturbed$signal)
plu <- plot_ly(
unperturbed, x= ~row, y= ~col, z= ~signal,
type='mesh3d', intensity = ~signal,
colors=  colorRamp(gray.colors(5))
)
plu2 = plu %>% layout(scene = list(zaxis=list(
range = c(0,600000))))
plu2
# creating rough summary and violin plots
#####
fadu_data_all_ann = fadu_data_all %>% filter(plate<5) %>% left_join(fadu_data_ann %>% select(-signal))
# rough summary by library/controls
fadu_data_all_ann_summary  = fadu_data_all_ann %>% group_by(plate,groups) %>%
summarise(Avg = mean(signal, na.rm=T), SD = sd(signal, na.rm=T))
fadu_data_all_ann_summary %>% pivot_wider(names_from = plate, values_from = c(Avg,SD)) %>%
write_csv("384plate run 1 total area summary.csv")
fadu_data_all_ann %>% mutate(annotation = paste(plate, groups)) %>%
ggplot(aes(x = as.factor(annotation),y = signal)) +
geom_violin(trim = F)+
geom_boxplot(width=0.1, color="red") +
theme(axis.text.x = element_text(angle = 45))
ggsave("384plate run 1 total area summary.png")
fadu_data_controls_summary = tibble(plate = rep(1:4,each=20), drugs = rep(c(paste0("bckg",1:10),paste0("staur",1:10)),4),
drug_avg = NA, drug_sd = NA, ctrl_count = NA, ctrl_avg = NA, ctrl_sd = NA,
ttest_pval = NA, wilcox_pval = NA)
for (i in 1:nrow(fadu_data_controls_summary)) {
ctrl = fadu_data_all_ann %>%
filter(plate == fadu_data_controls_summary$plate[i],
well %in% (fadu_data_controls %>% filter(comp_ctrl == fadu_data_controls_summary$drugs[i]) %>% pull(well))) %>% pull(signal)
dmso = fadu_data_all_ann %>%
filter(plate == fadu_data_controls_summary$plate[i],
well %in% (dmso_contr_groups %>% filter(drugs == fadu_data_controls_summary$drugs[i]) %>% pull(well) %>% unique())) %>% pull(signal)
fadu_data_controls_summary$drug_avg[i] = mean(ctrl)
fadu_data_controls_summary$drug_sd[i] = sd(ctrl)
fadu_data_controls_summary$ctrl_count[i] = length(dmso)
fadu_data_controls_summary$ctrl_avg[i] = mean(dmso)
fadu_data_controls_summary$ctrl_sd[i] = sd(dmso)
fadu_data_controls_summary$ttest_pval[i] = t.test(ctrl,dmso)$p.value
fadu_data_controls_summary$wilcox_pval[i] = wilcox.test(ctrl,dmso)$p.value
}
fadu_data_controls_left = fadu_data_ann %>% filter(groups != "lib", col<3) %>%
mutate(rand = sample(32)) %>% arrange(drugs,rand) %>%
mutate(comp_ctrl = paste0(groups, rep(1:5,c(3,3,3,3,4))))
fadu_data_controls_right = fadu_data_ann %>% filter(groups != "lib", col>22) %>%
mutate(rand = sample(32)) %>% arrange(drugs,rand) %>%
mutate(comp_ctrl = paste0(groups, rep(6:10,c(3,3,3,3,4))))
fadu_data_controls = bind_rows(fadu_data_controls_left,fadu_data_controls_right)
# now creating 20 sets  of 4  randomly selected dmso wells
# (with replacement, from the block of 20 wells in cols 3 and 4)
dmso_contr_groups = fadu_data_ann %>% filter(groups == "dmso", col==3 | col == 4, row < 11) %>%
select(well) %>% slice_sample(n=80,replace=T)  %>%
bind_cols(drugs =c(rep(paste0("bckg",1:10),4), rep(paste0("staur",1:10),4)))
fadu_data_controls_summary = tibble(plate = rep(1:4,each=20), drugs = rep(c(paste0("bckg",1:10),paste0("staur",1:10)),4),
drug_avg = NA, drug_sd = NA, ctrl_count = NA, ctrl_avg = NA, ctrl_sd = NA,
ttest_pval = NA, wilcox_pval = NA)
for (i in 1:nrow(fadu_data_controls_summary)) {
ctrl = fadu_data_all_ann %>%
filter(plate == fadu_data_controls_summary$plate[i],
well %in% (fadu_data_controls %>% filter(comp_ctrl == fadu_data_controls_summary$drugs[i]) %>% pull(well))) %>% pull(signal)
dmso = fadu_data_all_ann %>%
filter(plate == fadu_data_controls_summary$plate[i],
well %in% (dmso_contr_groups %>% filter(drugs == fadu_data_controls_summary$drugs[i]) %>% pull(well) %>% unique())) %>% pull(signal)
fadu_data_controls_summary$drug_avg[i] = mean(ctrl)
fadu_data_controls_summary$drug_sd[i] = sd(ctrl)
fadu_data_controls_summary$ctrl_count[i] = length(dmso)
fadu_data_controls_summary$ctrl_avg[i] = mean(dmso)
fadu_data_controls_summary$ctrl_sd[i] = sd(dmso)
fadu_data_controls_summary$ttest_pval[i] = t.test(ctrl,dmso)$p.value
fadu_data_controls_summary$wilcox_pval[i] = wilcox.test(ctrl,dmso)$p.value
}
fadu_data_controls_summary = fadu_data_controls_summary %>%
mutate(ttest_color = case_when(ttest_pval <= 0.05 ~ "orange",
ttest_pval <= 0.005 ~ "red",
TRUE ~ "gray") ,
wilcox_color = case_when(wilcox_pval <= 0.05 ~ "orange",
wilcox_pval <= 0.005 ~ "red",
TRUE ~ "gray"),
drug_to_ctlr = drug_avg/ctrl_avg, d_t_c_SD = drug_to_ctlr*sqrt((ctrl_sd/ctrl_avg)^2 + (drug_sd/drug_avg)^2 ))
pl <- plot_ly(
fadu_data_ann_dmso_matching, x= ~row, y= ~col, z= ~signal,
type='mesh3d', intensity = ~signal,
colors=  colorRamp(gray.colors(5))
)
# surface plot for negative controls
pl2 = pl %>% layout(scene = list(zaxis=list(
range = c(0,650000))))
pl2
# calculating average and SD by drugs
fadu_data_all_drugs_vs_ctrl = tibble(plate = rep(1:4,each=75), drugs = rep(drug_list,4),
drug_avg = NA, drug_sd = NA, ctrl_count = NA, ctrl_avg = NA, ctrl_sd = NA,
ttest_pval = NA, wilcox_pval = NA)
# creating a non-redundant list of drugs (NOT includind staurosporin, which is a positive control)
drug_list = fadu_data_ann %>% filter(groups == "lib") %>% pull(drugs) %>% unique()
# calculating average and SD by drugs
fadu_data_all_drugs_vs_ctrl = tibble(plate = rep(1:4,each=75), drugs = rep(drug_list,4),
drug_avg = NA, drug_sd = NA, ctrl_count = NA, ctrl_avg = NA, ctrl_sd = NA,
ttest_pval = NA, wilcox_pval = NA)
## temporarily joining col and row values to define control matrix
fadu_data_all_drugs_vs_ctrl =fadu_data_all_drugs_vs_ctrl %>% left_join(dmso_wells_around_drugs)
dmso_wells_around_drugs = tibble(drugs = drug_list, row_max = NA,row_min = NA, col_max = NA,col_min = NA)
# extracting the quadrant, where each drug is, and expanding it by 1 well in each direction
for (i in 1:length(drug_list)) {
dmso_wells_around_drugs$row_max[i] = drug_coord %>% filter(drugs == drug_list[i]) %>% select(row) %>% max()+1
dmso_wells_around_drugs$row_min[i] = drug_coord %>% filter(drugs == drug_list[i]) %>% select(row) %>% min()-1
dmso_wells_around_drugs$col_max[i] = drug_coord %>% filter(drugs == drug_list[i]) %>% select(col) %>% max()+1
dmso_wells_around_drugs$col_min[i] = drug_coord %>% filter(drugs == drug_list[i]) %>% select(col) %>% min()-1
}
#
drug_coord = fadu_data_ann %>%
filter(groups == "lib") %>% select(row,col, well,drugs) %>% arrange(drugs, row, col)
# extracting the quadrant, where each drug is, and expanding it by 1 well in each direction
for (i in 1:length(drug_list)) {
dmso_wells_around_drugs$row_max[i] = drug_coord %>% filter(drugs == drug_list[i]) %>% select(row) %>% max()+1
dmso_wells_around_drugs$row_min[i] = drug_coord %>% filter(drugs == drug_list[i]) %>% select(row) %>% min()-1
dmso_wells_around_drugs$col_max[i] = drug_coord %>% filter(drugs == drug_list[i]) %>% select(col) %>% max()+1
dmso_wells_around_drugs$col_min[i] = drug_coord %>% filter(drugs == drug_list[i]) %>% select(col) %>% min()-1
}
## temporarily joining col and row values to define control matrix
fadu_data_all_drugs_vs_ctrl =fadu_data_all_drugs_vs_ctrl %>% left_join(dmso_wells_around_drugs)
for (i in 1:nrow(fadu_data_all_drugs_vs_ctrl)) {
control_matrix = fadu_data_all_ann %>%
filter(plate == fadu_data_all_drugs_vs_ctrl$plate[i],row <= fadu_data_all_drugs_vs_ctrl$row_max[i] & row >= fadu_data_all_drugs_vs_ctrl$row_min[i] ) %>%
filter(plate == fadu_data_all_drugs_vs_ctrl$plate[i], col <= fadu_data_all_drugs_vs_ctrl$col_max[i] & col >= fadu_data_all_drugs_vs_ctrl$col_min[i] ) %>%
filter(drugs == "dmso")
# print(control_matrix)
control  = control_matrix %>% pull(signal)
# print(mean(control))
fadu_data_all_drugs_vs_ctrl$ctrl_count[i] =control_matrix %>% nrow()
fadu_data_all_drugs_vs_ctrl$ctrl_avg[i] = mean(control)
fadu_data_all_drugs_vs_ctrl$ctrl_sd[i] = sd(control)
drug = fadu_data_all_ann %>% filter(plate == fadu_data_all_drugs_vs_ctrl$plate[i],drugs ==  fadu_data_all_drugs_vs_ctrl$drugs[i]) %>%
pull(signal)
fadu_data_all_drugs_vs_ctrl$drug_avg[i] = mean(drug)
fadu_data_all_drugs_vs_ctrl$drug_sd[i] = sd(drug)
fadu_data_all_drugs_vs_ctrl$ttest_pval[i] =t.test(drug,control)$p.value
fadu_data_all_drugs_vs_ctrl$wilcox_pval[i] =wilcox.test(drug,control)$p.value
}
fadu_data_all_drugs_vs_ctrl = fadu_data_all_drugs_vs_ctrl %>%
mutate(ttest_color = case_when(ttest_pval <= 0.05 ~ "orange",
ttest_pval <= 0.005 ~ "red",
TRUE ~ "gray") ,
wilcox_color = case_when(wilcox_pval <= 0.05 ~ "orange",
wilcox_pval <= 0.005 ~ "red",
TRUE ~ "gray"),
drug_to_ctlr = drug_avg/ctrl_avg, d_t_c_SD = drug_to_ctlr*sqrt((ctrl_sd/ctrl_avg)^2 + (drug_sd/drug_avg)^2 )) %>%
select(-row_max, -row_min,-col_max, -col_min)
fadu_data_all_drugs_vs_ctrl %>% write_csv("run1 fadu_data_all_drugs_vs_ctrl total area.csv")
fadu_data_all_drugs_vs_ctrl_plot = fadu_data_all_drugs_vs_ctrl %>% bind_rows(fadu_data_controls_summary) %>%
select(plate, drugs, drug_avg,drug_sd,ctrl_avg, ctrl_sd, drug_to_ctlr, d_t_c_SD,ttest_pval,wilcox_pval) %>%
pivot_wider(names_from = plate, values_from = c(drug_avg,drug_sd,ctrl_avg, ctrl_sd, drug_to_ctlr, d_t_c_SD,ttest_pval,wilcox_pval))
fadu_data_all_drugs_vs_ctrl_plot %>% write_csv("run1 fadu_data_all_drugs_vs_ctrl_plot  total area.csv")
